
===== index.html =====

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="Romulo Guilherme Rosa | @rosadevsolutions">
    <title>Loja Campinho</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <!-- Botões acima do cabeçalho -->
    <div id="botoes">
        <button id="btn-campinho" onclick="clicarBotao('campinho')">Campinho Digital</button>
        <button id="btn-ofertas" onclick="clicarBotao('ofertas')">Ofertas</button>
        <button id="btn-descontos" onclick="clicarBotao('descontos')">Descontos Incríveis</button>
    </div>

    <!-- Cabeçalho com imagem -->
    <header id="cabecalho">
        <img src="fundoCabecaLojaCampinho.jpg" alt="Cabeçalho Loja Campinho" id="imagem-cabecalho">
    </header>

    <h1>Loja da Campinho</h1>
    <section id="produtos__wrapper">
        <div id="produtos"></div>
    </section>

    <!-- Modal -->
    <div id="modal" class="modal">
        <div class="modal-conteudo">
            <span id="fechar-modal" class="fechar" onclick="fecharModal()">&times;</span>
            <h2>Receba Descontos e Ofertas</h2>
            <form id="form-descontos">
                <label for="nome">Nome Completo</label>
                <input type="text" id="nome" name="nome" required>

                <label for="email">E-mail</label>
                <input type="email" id="email" name="email" required>

                <label for="cidade">Cidade</label>
                <input type="text" id="cidade" name="cidade" required>

                <label for="estado">Estado</label>
                <input type="text" id="estado" name="estado" required>

                <button type="submit">Enviar</button>
            </form>
            <p>Todos os dias algo estará com 5% ou 10% de desconto.</p>
        </div>
    </div>

    <script src="index.js"></script>
</body>
</html>


===== styles.css =====

/* Estilos globais */
body {
    font-family: Arial, sans-serif;
    background-color: #f9f9f9;
    margin: 0;
    padding: 0;
}

h1 {
    text-align: center;
    margin-top: 20px;
    font-size: 2em;
    color: #333;
}

/* Botões acima do cabeçalho */
#botoes {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-top: 20px;
}

button {
    padding: 10px 20px;
    background-color: #ccc;
    border: none;
    border-radius: 5px;
    font-size: 1em;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

button:hover {
    opacity: 0.8;
}

/* Cabeçalho */
#cabecalho {
    width: 100%;
    height: 250px;
    overflow: hidden;
}

#imagem-cabecalho {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
}

/* Modal */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* Fundo com transparência */
    justify-content: center;
    align-items: center;
    z-index: 999;
}

.modal-conteudo {
    background-color: rgba(107, 142, 35, 0.75); /* Verde oliva com 75% de transparência */
    padding: 20px;
    border-radius: 10px;
    width: 80%;
    max-width: 400px;
    text-align: center;
    position: relative; /* Necessário para a posição do botão de fechar */
}

.modal-conteudo h2 {
    font-size: 1.5em;
    margin-bottom: 20px;
}

.modal-conteudo label {
    display: block;
    margin-top: 10px;
}

.modal-conteudo input {
    width: 100%;
    padding: 8px;
    margin-top: 5px;
    margin-bottom: 10px;
    border-radius: 5px;
    border: 1px solid #ddd;
}

.modal-conteudo button {
    padding: 10px 15px;
    background-color: #28a745; /* Cor verde */
    border: none;
    border-radius: 5px;
    color: white;
    cursor: pointer;
}

.modal-conteudo p {
    margin-top: 15px;
    font-size: 1.1em;
    color: #333;
}

.fechar {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 30px;
    color: #333;
    cursor: pointer;
}

/* Responsividade */
@media (max-width: 768px) {
    .produto {
        width: calc(50% - 40px);
    }
}

@media (max-width: 480px) {
    .produto {
        width: calc(100% - 40px);
    }
}


===== index.js =====

const apiUrl = 'https://ecom-back-strapi.onrender.com/api/products';
const token = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNzMwOTI2OTYzLCJleHAiOjE3MzM1MTg5NjN9.5oZdqaREzoAKCTKiXINGqQj32g50S0KoXmSKAf5FJhI';

// Função para configurar os cabeçalhos de autenticação
function configurarCabecalhos() {
    return {
        'Authorization': token,
        'Content-Type': 'application/json'
    };
}

// Função para buscar os produtos da API
async function buscarProdutos() {
    try {
        const response = await fetch(apiUrl, {
            method: 'GET',
            headers: configurarCabecalhos()
        });

        if (!response.ok) {
            throw new Error('Erro na resposta da API: ' + response.status);
        }

        const data = await response.json();
        return data.data; // Retorna os produtos
    } catch (error) {
        console.error('Erro ao buscar dados da API:', error);
        return null; // Em caso de erro
    }
}

// Função para buscar imagem do Google Imagens com base na descrição
async function buscarImagemGoogle(descricao) {
    const query = descricao.replace(/\s+/g, '+');  // Substitui espaços por "+"
    const googleImageSearchUrl = `https://www.google.com/search?hl=pt-BR&q=${query}&tbm=isch`;

    try {
        const response = await fetch(googleImageSearchUrl);
        const text = await response.text();
        
        // Usar regex para tentar encontrar a primeira imagem
        const regex = /"ou":"(https[^"]+\.(jpg|jpeg|png|gif))"/;
        const match = text.match(regex);

        return match ? match[1] : null;  // Retorna a URL da primeira imagem ou null
    } catch (error) {
        console.error('Erro ao buscar imagem do Google:', error);
        return null;  // Em caso de erro
    }
}

// Função para criar o elemento HTML para cada produto
async function criarElemento(produto) {
    const productDiv = document.createElement('div');
    productDiv.classList.add('produto');

    const productName = document.createElement('h2');
    productName.textContent = produto.attributes.nome;
    productDiv.appendChild(productName);

    const productPrice = document.createElement('p');
    productPrice.textContent = `Preço: R$ ${produto.attributes.preco.toFixed(2)}`;
    productDiv.appendChild(productPrice);

    const productDescription = document.createElement('p');
    productDescription.textContent = produto.attributes.descricao;
    productDiv.appendChild(productDescription);

    // Buscar imagem do Google com base na descrição
    const imageUrl = await buscarImagemGoogle(produto.attributes.descricao);

    // Se uma imagem foi encontrada, cria o elemento de imagem
    if (imageUrl) {
        const productImage = document.createElement('img');
        productImage.src = imageUrl;
        productImage.alt = produto.attributes.nome;
        productImage.classList.add('produto-imagem');
        productDiv.appendChild(productImage);
    } else if (produto.attributes.imagem && produto.attributes.imagem.data) {
        // Se nenhuma imagem foi encontrada do Google, tenta usar a URL da API
        const imageUrlApi = 'https://ecom-back-strapi.onrender.com' + produto.attributes.imagem.data.attributes.url;
        const productImage = document.createElement('img');
        productImage.src = imageUrlApi;
        productImage.alt = produto.attributes.nome;
        productImage.classList.add('produto-imagem');
        productDiv.appendChild(productImage);
    }

    // Criar o botão de compra
    const buyButton = document.createElement('button');
    buyButton.textContent = 'Comprar';
    buyButton.onclick = () => {
        alert(`Você comprou: ${produto.attributes.nome}`);
    };
    productDiv.appendChild(buyButton);

    return productDiv;
}

// Função para exibir os produtos na página
async function exibirProdutos(produtos) {
    const containerHtml = document.getElementById('produtos');
    containerHtml.innerHTML = ''; // Limpa o container antes de adicionar novos produtos

    if (produtos) {
        for (const item of produtos) {
            const elm = await criarElemento(item);
            containerHtml.appendChild(elm);
        }
    } else {
        console.error('Nenhum produto disponível para exibir.');
    }
}

// Função principal para iniciar o aplicativo
async function iniciarApp() {
    const produtos = await buscarProdutos();
    if (produtos) {
        exibirProdutos(produtos); // Passa os produtos para a função de exibição
    } else {
        console.error('Nenhum produto encontrado.');
    }
}

// Chama a função principal ao carregar a página
window.onload = iniciarApp;

// Função para alterar a cor do botão
function clicarBotao(botao) {
    const botaoCampinho = document.getElementById('btn-campinho');
    const botaoOfertas = document.getElementById('btn-ofertas');
    const botaoDescontos = document.getElementById('btn-descontos');

    // Resetando as cores
    botaoCampinho.style.backgroundColor = '#ccc';
    botaoOfertas.style.backgroundColor = '#ccc';
    botaoDescontos.style.backgroundColor = '#ccc';

    // Alterando a cor do botão clicado
    if (botao === 'campinho') {
        botaoCampinho.style.backgroundColor = 'green';
        window.location.href = 'https://www.campinhodigital.org/';
    } else if (botao === 'ofertas') {
        botaoOfertas.style.backgroundColor = 'pink';
    } else if (botao === 'descontos') {
        botaoDescontos.style.backgroundColor = 'purple';
        abrirModal(); // Abre o modal
    }
}

// Função para abrir o modal
function abrirModal() {
    const modal = document.getElementById('modal');
    modal.style.display = 'flex';
}

// Função para fechar o modal
function fecharModal() {
    const modal = document.getElementById('modal');
    modal.style.display = 'none';
}

// Prevenção do envio do formulário para não recarregar a página
document.getElementById('form-descontos').addEventListener('submit', function(event) {
    event.preventDefault();
    alert('Formulário enviado! Você está inscrito para receber descontos.');
    fecharModal(); // Fecha o modal após o envio
});


